openapi: 3.1.0
info:
  version: 1.0.0
  title: Visit
  termsOfService: 'https://example.com/terms/'
  contact:
    email: contact@example.com
    url: 'https://dcsa.org/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://raw.githubusercontent.com/FinnNielsen/BigBadWolfAPI/main/images/sheepr.gif'
  description:
    $ref: ./info-description.md

tags:
  - name: Visit
    description: Example visit operations.

servers:
  - url: 'https://{tenant}/api/v1'
    variables:
      tenant:
        default: www
        description: Your tenant id
  - url: 'https://example.com/api/v1'

paths:
  /visit/:
    post:
      tags:
        - Visit
      summary: Echo test
      description: Receive the exact message you've sent
      operationId: echo
      security:
        - api_key: []
        - basic_auth: []
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: string
              examples:
                response:
                  value: Hello world!
        '400':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              discriminator:
                propertyName: receiver
                description: Who to visit
                mapping:
                  GrandMother: '#/components/schemas/GrandMother'
                  LittleRedRidingHood: '#/components/schemas/LittleRedRidingHood'
              oneOf:
                - $ref: '#/components/schemas/GrandMother'
                - $ref: '#/components/schemas/LittleRedRidingHood'
        description: Echo payload
        required: true

components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic

  schemas:
    GrandMother:
      type: object
      required:
        - receiver
        - intention
      properties:
        receiver:
          type: string
        intention:
          type: string
          enum: [ EAT, KILL ]
    LittleRedRidingHood:
      type: object
      required:
        - receiver
        - intention
      properties:
        receiver:
          type: string
        intention:
          type: string
          enum: [ EAT, KILL ]
